Checkout Process

- Guest User or Authenticated User? -> Handle this

1) Cart -> Checkout View
	? 
	- Login or Enter email as guest
	- Shipping Address
	- Billing Info
		- Billing Address
		- Credit Card / Payment

2) Billing App
	- Billing Profile( associated to a user or an email)
		- generate payment processor token( Stripe or Braintree )

3) Order / Invoices Component
	- Connecting the billing profile
	- Shipping / Billing
	- Status -> Shipped / Cancelled?
	


========================


Order Component

Cart prepares the order and the actual order is handled in the "orders" app

cart = models.ForeignKey(Cart)

# billing_profile = ?
    # shipping_address = ?
    # billing_address = ?

    # Assign a random of strings / numbers which represents this order to the customer
    # pk / id
    order_id = models.CharField(max_length=120, blank=True)
    cart = models.ForeignKey(Cart, on_delete=models.CASCADE)
    status = models.CharField(max_length=120, default="created", choices=ORDER_STATUS_CHOICES)

    shipping_total = models.DecimalField(default=5.99, max_digits=100, decimal_places=2)
    order_total = models.DecimalField(default=0.00, max_digits=100, decimal_places=2)

    def __str__(self):
        return self.order_id
		
========================

Generate the order ID


Order ID -> Random, Unique ( has to be, is a must)


def pre_save_create_order_id(sender, instance, *args, **kwargs):
    if not instance.order_id:
        instance.order_id = unique_order_id_generator(instance)


pre_save.connect(pre_save_create_order_id, sender=Order)


========================

Calculate the order total

How?
- Based off of Cart
- When the cart changes the order changes
- When the cart has been updated, our order should change
