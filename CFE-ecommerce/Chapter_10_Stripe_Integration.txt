Stripe Integration

Intro
- Stripe is an integration service that allows us to accept payment from major credit cards
- Add credit card
- Run transactions


==========================

Stripe - Getting Started

- Holds customers CC info -> Security
- API is super easy


We need to use https

>>> pip install stripe

Get API keys from Stripe dashboard


backend is setup ( this si sdone by Stripe)
We need to set up the front end
 
==========================

Creating Stripe Customer


In billing\models.py

# If customer_ID is present for a payments app
def billing_profile_create_receiver(sender, instance, *args, **kwargs):
    # If there is no email on teh customer, we don't want to
    # create the ID on Stripe
    if not instance.customer_id and instance.email:
        print("ACTUAL API Request -> Send to Stripe")

        # Run an API request to Stripe
        customer = stripe.Customer.create(email=instance.email)
        print(customer)
        instance.customer_id = customer.id


pre_save.connect(billing_profile_create_receiver, sender=BillingProfile)


==========================

Payment method View and Stripe JS


https://stripe.com/docs/stripe-js/elements/quickstart

- Example of how the frontend of collecting CC info from customer looks like


==========================

Improving Payment Method Form

==========================

Improving Payment Method Form 2

==========================

Reusable Stripe Module

JSRender Usage - rendering templates
Rendering something in the {{}} brackets


{% verbatim %}
{% endverbatime %}

-> verbatim ignores all the {{}} tags


==========================

Add Card to Customer with Stripe

- Billling profile for the user connected to the Stripe


Stripe API reference
- Get customer first( Customer ID)
- Create source( based off of token)

token = request.POST.get("token")
customer = stripe.Customer.retrieve(billing_profile.customer_id)
customer.sources.create(source=token)


customer.sources.create(source=token) -> This gives us a response
card_response = customer.sources.create(source=token)

==========================

Saving Card in Django

Billing -> views.py

We can now add cards to Stripe
We can add them to our Django


class CardManager(models.Manager):
    def add_new(self, billing_profile, stripe_card_response):
        if str(stripe_card_response.object) == "card":
            # We know that this is a card
            new_card = self.model(
                billing_profile=billing_profile,
                stripe_id=stripe_card_response.id,
                brand=stripe_card_response.brand,
                country=stripe_card_response.country,
                exp_month=stripe_card_response.exp_month,
                exp_year=stripe_card_response.exp_year,
                last4=stripe_card_response.last4
            )
            new_card.save()
            return new_card
        return None


class Card(models.Model):
    stripe_id = models.CharField(max_length=120)
    billing_profile = models.ForeignKey(BillingProfile, on_delete=models.CASCADE)
    brand = models.CharField(max_length=120, null=True, blank=True)
    # 2 digit code
    country = models.CharField(max_length=20, null=True, blank=True)
    exp_month = models.IntegerField(null=True, blank=True)
    exp_year = models.IntegerField(null=True, blank=True)
    last4 = models.CharField(max_length=4, null=True, blank=True)
    default = models.BooleanField(default=True)

    objects = CardManager()

    def __str__(self):
        return "{} {}".format(self.brand, self.last4)

		
==========================

Charge the customer


Example:

stripe.Charge.create(
  amount=2000,
  currency="usd",
  source="tok_mastercard", # obtained with Stripe.js
  description="Charge for jenny.rosen@example.com"
)

If there are Stripe exceptions:
use try catch

==========================

Putting it all together

==========================

Changing Payment Methods
- In the Finalize Checkout screen, display the card


Payment Method: {{ billing_profile.default_card }}

Default Card

==========================

Improving the Card UI

When "Add New Card" error shows up but button remains active
We need to improve this UI

Click on thsi button -> Show some action


In ecommerce.main.js -> 
var loadTime = 1500
var errorHtml = "<i class='fa fa=warning'></i>A error occurred"
var errorClasses = "btn btn-danger disabled my-3"
var loadingHtml = "<i class='fa fa=spin fa-spinner'></i>Loading..."
var ladongClasses = "btn btn-success disabled my-3"






==========================